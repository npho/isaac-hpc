# isaac-sim.def by Nam Pho

### From local container

# https://catalog.ngc.nvidia.com/orgs/nvidia/collections/cuda_toolkit/artifacts
# apptainer pull ubuntu22.04_cuda-dev-12.8.1.sif docker://nvcr.io/nvidia/cuda:12.8.1-devel-ubuntu22.04

Bootstrap: localimage
From: ubuntu22.04_cuda-dev-12.8.1.sif

%arguments
    ISAAC_VERSION=4.5.0
    SRC=/usr/local/src

%labels
    Author npho@uw.edu
    Version {{ ISAAC_VERSION }}

%help
    An Apptainer native implementation of Isaac Sim.

%setup
    # Vulkan Drivers
    if [ -f "vulkan.run" ]; then
        echo "Vulkan drivers exist!"
    else
        echo "Downloading Vulkan drivers..."
        # https://www.nvidia.com/en-us/drivers/details/247720/
        curl -o vulkan.run https://us.download.nvidia.com/XFree86/Linux-x86_64/570.169/NVIDIA-Linux-x86_64-570.169.run
    fi

    # Isaac Sim
    if [ -f "isaac-sim_{{ ISAAC_VERSION }}.zip" ]; then
       echo "Isaac Sim exists!"
    else
	echo "Downloading Isaac Sim..."
	curl -o isaac-sim_{{ ISAAC_VERSION }}.zip https://download.isaacsim.omniverse.nvidia.com/isaac-sim-standalone%404.5.0-rc.36%2Brelease.19112.f59b3005.gl.linux-x86_64.release.zip
    fi

%files
    # Vulkan configuration
    nvidia_icd.json /etc/vulkan/icd.d/
    nvidia_layers.json /etc/vulkan/implicit_layer.d/

    # Isaac and Python
    requirements* {{ SRC }}
    isaac-sim_{{ ISAAC_VERSION }}.zip {{ SRC }}
    test.sh /opt/
    sim.py /opt/

%post
    # Install supporting packages
    apt install \
    	fglrx \
	unzip \
	which \
	xauth \
	xorg \
	xserver-xorg-core \
	xserver-xorg \
	zenity \
	zsh

    # Setup uv for Python stuff
    mkdir -p /opt/uv/bin/
    export UV_INSTALL_DIR=/opt/uv/bin/
    curl -LsSf https://astral.sh/uv/install.sh | sh
    export PATH=/opt/uv/bin/:${PATH}

    # UV parameters
    # https://docs.astral.sh/uv/reference/environment/
    UV_CONCURRENT_DOWNLOADS=100
    UV_CONCURRENT_BUILDS=100
    UV_CONCURRENT_INSTALLS=100
    UV_COMPILE_BYTECODE=True
    
    # Python environment setup
    uv python install 3.10 # Isaac Sim 4.5.0 requires Python 3.11
    mkdir -p /opt/python/isaac
    cd /opt/python/isaac

    export ACCEPT_EULA=Y
    export OMNI_KIT_ACCEPT_EULA=YES
    uv venv --relocatable --prompt isaac
    uv pip install \
       --torch-backend cu128 \
       --index https://download.pytorch.org/whl/cu128 \
       --index https://pypi.nvidia.com \
       -r {{ SRC }}/requirements.txt #\
       #-r {{ SRC }}/requirements-isaac.txt
    source .venv/bin/activate

    # Isaac Sim Install
    mkdir /isaac-sim
    unzip -q {{ SRC }}/isaac-sim_{{ ISAAC_VERSION }}.zip -d /isaac-sim
    /isaac-sim/post_install.sh
    #/isaac-sim/isaac-sim.selector.sh

    # Clean up
    rm -vfr {{ SRC }}/*
    apt clean
    apt autoremove

%runscript
    exec echo "$@"
    exec source /opt/python/isaac/.venv/bin/activate

%environment
    export ACCEPT_EULA=Y
    export OMNI_KIT_ACCEPT_EULA=YES
    export PATH=/opt/uv/bin/:${PATH}
