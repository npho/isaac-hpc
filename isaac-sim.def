# isaac-sim.def by Nam Pho

# https://catalog.ngc.nvidia.com/orgs/nvidia/collections/cuda_toolkit/artifacts

### From scratch
#Bootstrap: docker
#From: nvcr.io/nvidia/cuda:{{ CONTAINER_TAG }}

### From local container
Bootstrap: localimage
From: rocky9_cuda-dev-12.9.1.sif

%arguments
    CONTAINER_TAG=12.9.1-devel-rockylinux9
    ISAAC_VERSION=4.5.0
    SRC=/usr/local/src/

%labels
    Author npho@uw.edu
    Version 4.5.0

%help
    An Apptainer native implementation of Isaac Sim.

%files
    requirements.txt {{ SRC }}

%post
    # Install supporting packages
    dnf clean all
    dnf install -y \ 
   	libXext libSM libXrender \
	mesa-libGL \
    	which \
    	zsh

    # Setup uv for Python stuff
    mkdir -p /opt/uv/bin/
    export UV_INSTALL_DIR=/opt/uv/bin/
    curl -LsSf https://astral.sh/uv/install.sh | sh
    export PATH=/opt/uv/bin/:${PATH}
    
    # Python environment setup
    uv python install 3.10
    mkdir -p /opt/python/isaac
    cd /opt/python/isaac

    export ACCEPT_EULA=Y
    export OMNI_KIT_ACCEPT_EULA=YES
    export UV_INDEX=https://pypi.nvidia.com
    uv venv --relocatable --prompt isaac
    uv pip install --torch-backend cu128 -r {{ SRC }}/requirements.txt
    source .venv/bin/activate
    
    # Install Isaac Sim
    #mkdir -p /opt/isaacsim/
    #unzip -q {{ SRC }}/isaac-sim_{{ ISAAC_VERSION }}.zip -d /opt/isaacsim/
    #/opt/isaacsim/post_install.sh
    #/opt/isaacsim/isaac-sim.selector.sh
    
    # Clean up
    rm -vfr {{ SRC }}/*
    dnf clean all

%environment
    export ACCEPT_EULA=Y
    export OMNI_KIT_ACCEPT_EULA=YES
    export PATH=/opt/uv/bin/:${PATH}
